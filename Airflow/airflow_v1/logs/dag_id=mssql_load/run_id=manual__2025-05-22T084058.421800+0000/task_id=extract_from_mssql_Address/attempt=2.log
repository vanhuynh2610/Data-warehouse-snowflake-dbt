{"timestamp":"2025-05-22T14:37:03.278045","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-05-22T14:37:03.284896","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/load_data.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-05-22T14:37:08.000233","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-05-22T14:37:14.437906","level":"info","event":"Connection Retrieved 'mssqlserver'","logger":"airflow.hooks.base"}
{"timestamp":"2025-05-22T14:37:14.698221","level":"info","event":"Running statement: SELECT * FROM Person.Address, parameters: None","logger":"airflow.task.hooks.airflow.providers.microsoft.mssql.hooks.mssql.MsSqlHook"}
{"timestamp":"2025-05-22T14:37:15.255937","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-05-22T14:37:15.301338","level":"info","event":"Connection Retrieved 'snowflake-connect'","logger":"airflow.hooks.base"}
{"timestamp":"2025-05-22T14:37:15.301979","level":"info","event":"Snowflake Connector for Python Version: 3.15.0, Python Version: 3.12.10, Platform: Linux-5.15.167.4-microsoft-standard-WSL2-x86_64-with-glibc2.36","logger":"snowflake.connector.connection"}
{"timestamp":"2025-05-22T14:37:15.302853","level":"info","event":"Connecting to GLOBAL Snowflake domain","logger":"snowflake.connector.connection"}
{"timestamp":"2025-05-22T14:37:16.463856","level":"info","event":"Running statement: USE DATABASE EDW, parameters: None","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-05-22T14:37:16.464088","level":"info","event":"Running statement: USE DATABASE EDW, parameters: None","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-05-22T14:37:16.793182","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-05-22T14:37:16.794379","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-05-22T14:37:16.794982","level":"info","event":"Snowflake query id: 01bc852d-0001-296b-0001-8a160004570a","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-05-22T14:37:17.054487","level":"info","event":"Snowflake Connector for Python Version: 3.15.0, Python Version: 3.12.10, Platform: Linux-5.15.167.4-microsoft-standard-WSL2-x86_64-with-glibc2.36","logger":"snowflake.connector.connection"}
{"timestamp":"2025-05-22T14:37:17.057788","level":"info","event":"Connecting to GLOBAL Snowflake domain","logger":"snowflake.connector.connection"}
{"timestamp":"2025-05-22T14:37:17.963338","level":"info","event":"Running statement: CREATE SCHEMA IF NOT EXISTS Bronze, parameters: None","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-05-22T14:37:17.964109","level":"info","event":"Running statement: CREATE SCHEMA IF NOT EXISTS Bronze, parameters: None","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-05-22T14:37:18.236837","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-05-22T14:37:18.237182","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-05-22T14:37:18.237289","level":"info","event":"Snowflake query id: 01bc852d-0001-2a1c-0001-8a160004629a","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-05-22T14:37:18.476173","level":"info","event":"Snowflake Connector for Python Version: 3.15.0, Python Version: 3.12.10, Platform: Linux-5.15.167.4-microsoft-standard-WSL2-x86_64-with-glibc2.36","logger":"snowflake.connector.connection"}
{"timestamp":"2025-05-22T14:37:18.478118","level":"info","event":"Connecting to GLOBAL Snowflake domain","logger":"snowflake.connector.connection"}
{"timestamp":"2025-05-22T14:37:18.941374","level":"info","event":"Running statement: USE SCHEMA Bronze, parameters: None","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-05-22T14:37:18.941952","level":"info","event":"Running statement: USE SCHEMA Bronze, parameters: None","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-05-22T14:37:19.035947","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-05-22T14:37:19.036339","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-05-22T14:37:19.036471","level":"info","event":"Snowflake query id: 01bc852d-0001-29f9-0001-8a16000436ba","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-05-22T14:37:19.302095","level":"info","event":"Running statement: SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = UPPER('Address') AND TABLE_SCHEMA = 'Person', parameters: None","logger":"airflow.task.hooks.airflow.providers.microsoft.mssql.hooks.mssql.MsSqlHook"}
{"timestamp":"2025-05-22T14:37:19.616600","level":"info","event":"Snowflake Connector for Python Version: 3.15.0, Python Version: 3.12.10, Platform: Linux-5.15.167.4-microsoft-standard-WSL2-x86_64-with-glibc2.36","logger":"snowflake.connector.connection"}
{"timestamp":"2025-05-22T14:37:19.617177","level":"info","event":"Connecting to GLOBAL Snowflake domain","logger":"snowflake.connector.connection"}
{"timestamp":"2025-05-22T14:37:20.073073","level":"info","event":"Running statement: CREATE TABLE IF NOT EXISTS Address (\n        \"AddressID\" VARCHAR, \"AddressLine1\" VARCHAR, \"AddressLine2\" VARCHAR, \"City\" VARCHAR, \"StateProvinceID\" VARCHAR, \"PostalCode\" VARCHAR, \"SpatialLocation\" VARCHAR, \"rowguid\" VARCHAR, \"ModifiedDate\" VARCHAR\n    ), parameters: None","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-05-22T14:37:20.073509","level":"info","event":"Running statement: CREATE TABLE IF NOT EXISTS Address (\n        \"AddressID\" VARCHAR, \"AddressLine1\" VARCHAR, \"AddressLine2\" VARCHAR, \"City\" VARCHAR, \"StateProvinceID\" VARCHAR, \"PostalCode\" VARCHAR, \"SpatialLocation\" VARCHAR, \"rowguid\" VARCHAR, \"ModifiedDate\" VARCHAR\n    ), parameters: None","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-05-22T14:37:20.304529","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-05-22T14:37:20.304838","level":"info","event":"Rows affected: 1","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-05-22T14:37:20.304919","level":"info","event":"Snowflake query id: 01bc852d-0001-29f9-0001-8a16000436be","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-05-22T14:37:20.515160","level":"info","event":"Snowflake Connector for Python Version: 3.15.0, Python Version: 3.12.10, Platform: Linux-5.15.167.4-microsoft-standard-WSL2-x86_64-with-glibc2.36","logger":"snowflake.connector.connection"}
{"timestamp":"2025-05-22T14:37:20.515644","level":"info","event":"Connecting to GLOBAL Snowflake domain","logger":"snowflake.connector.connection"}
{"timestamp":"2025-05-22T14:37:21.105821","level":"info","event":"Running statement: INSERT INTO Address (\"AddressID\", \"AddressLine1\", \"AddressLine2\", \"City\", \"StateProvinceID\", \"PostalCode\", \"SpatialLocation\", \"rowguid\", \"ModifiedDate\")\n    VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s), parameters: (1, '1970 Napa Ct.', None, 'Bothell', 79, '98011', b'\\xe6\\x10\\x00\\x00\\x01\\x0c\\xae\\x8b\\xfc(\\xbc\\xe4G@g\\xa8\\x91\\x89\\x89\\x8a^\\xc0', UUID('9aadcb0d-36cf-483f-84d8-585c2d4ec6e9'), datetime.datetime(2007, 12, 4, 0, 0))","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-05-22T14:37:21.106202","level":"info","event":"Running statement: INSERT INTO Address (\"AddressID\", \"AddressLine1\", \"AddressLine2\", \"City\", \"StateProvinceID\", \"PostalCode\", \"SpatialLocation\", \"rowguid\", \"ModifiedDate\")\n    VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s), parameters: (1, '1970 Napa Ct.', None, 'Bothell', 79, '98011', b'\\xe6\\x10\\x00\\x00\\x01\\x0c\\xae\\x8b\\xfc(\\xbc\\xe4G@g\\xa8\\x91\\x89\\x89\\x8a^\\xc0', UUID('9aadcb0d-36cf-483f-84d8-585c2d4ec6e9'), datetime.datetime(2007, 12, 4, 0, 0))","logger":"airflow.task.hooks.airflow.providers.snowflake.hooks.snowflake.SnowflakeHook"}
{"timestamp":"2025-05-22T14:37:21.301851","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"ProgrammingError","exc_value":"252004: 252004: Failed processing pyformat-parameters; 255001: 255001: Binding data in type (uuid) is not supported.","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":838,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1130,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":408,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":212,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":235,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/load_data.py","lineno":77,"name":"extract_from_mssql"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/snowflake/hooks/snowflake.py","lineno":522,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py","lineno":775,"name":"_run_command"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/snowflake/connector/cursor.py","lineno":986,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/snowflake/connector/cursor.py","lineno":785,"name":"_preprocess_pyformat_query"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/snowflake/connector/connection.py","lineno":1825,"name":"_process_params_pyformat"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/snowflake/connector/errors.py","lineno":279,"name":"errorhandler_wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/snowflake/connector/errors.py","lineno":334,"name":"hand_to_other_handler"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/snowflake/connector/errors.py","lineno":210,"name":"default_errorhandler"}]},{"exc_type":"ProgrammingError","exc_value":"255001: 255001: Binding data in type (uuid) is not supported.","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/snowflake/connector/connection.py","lineno":1821,"name":"_process_params_pyformat"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/snowflake/connector/connection.py","lineno":1867,"name":"_process_single_param"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/snowflake/connector/converter.py","lineno":483,"name":"to_snowflake"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/snowflake/connector/converter.py","lineno":657,"name":"__getattr__"}]}]}
